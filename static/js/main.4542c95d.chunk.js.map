{"version":3,"sources":["components/Button/Button.js","components/Shape.js","components/Select/Select.js","App.js","index.js"],"names":["Button","PropTypes","shape","text","string","isRequired","click","func","goods","arrayOf","change","value","className","onClick","type","Select","onChange","map","item","index","goodsFromServer","App","state","initialLength","start","setState","reverse","prevState","sortByLength","sort","a","b","length","sortByAlphabet","reset","select","event","target","this","key","String","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAGaA,GCDcC,IAAUC,MAAM,CACzCC,KAAMF,IAAUG,OAAOC,WACvBC,MAAOL,IAAUM,KAAKF,aAGGJ,IAAUC,MAAM,CACzCM,MAAOP,IAAUQ,QAAQR,IAAUG,QAAQC,WAC3CK,OAAQT,IAAUM,KAAKF,WACvBM,MAAOV,IAAUG,OAAOC,aDPJ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,KAAV,OACpB,4BACES,UAAU,UACVC,QAASP,EACTQ,KAAK,UAEJX,KENQY,EAAS,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOE,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,MAAlB,OACpB,4BACEK,SAAUN,EACVC,MAAOA,GAENH,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACT,4BAAQR,MAAOQ,EAAQ,GAAIA,EAAQ,QCJnCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkGaC,E,4MA9FbC,MAAQ,CACNd,MAAO,GACPe,cAAe,G,EAGjBC,MAAQ,WACN,EAAKC,SAAS,CACZjB,MAAM,GAAD,OAAMY,M,EAIfM,QAAU,WACR,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BnB,MAAO,YAAImB,EAAUnB,OAAOkB,e,EAIhCE,aAAe,WACb,EAAKH,UAAS,SAAAE,GAAS,MAAK,CAC1BnB,MAAO,YAAImB,EAAUnB,OAAOqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,OAASD,EAAEC,e,EAI7DC,eAAiB,WACf,EAAKR,UAAS,SAAAE,GAAS,MAAK,CAC1BnB,MAAO,YAAImB,EAAUnB,OAAOqB,Y,EAIhCK,MAAQ,WACN,EAAKT,SAAS,CACZjB,MAAM,GAAD,OAAMY,M,EAIfe,OAAS,SAACC,GACR,IAAMJ,EAASI,EAAMC,OAAO1B,MAE5B,EAAKc,SAAS,CACZF,cAAeS,K,uDAIT,IAAD,OACP,OAAgC,IAA5BM,KAAKhB,MAAMd,MAAMwB,OAEjB,yBAAKpB,UAAU,OACb,4BACEA,UAAU,UACVC,QAASyB,KAAKd,MACdV,KAAK,UAHP,UAYJ,yBAAKF,UAAU,OACb,qCACA,4BACG0B,KAAKhB,MAAMd,MAAMS,KAAI,SAAAC,GAAI,OACxBA,EAAKc,QAAU,EAAKV,MAAMC,cACtB,wBAAIgB,IAAKrB,EAAMN,UAAU,YAAYM,GACrC,SAGR,kBAAC,EAAD,CACEZ,MAAOgC,KAAKJ,MACZ/B,KAAK,UAEP,kBAAC,EAAD,CACEG,MAAOgC,KAAKZ,QACZvB,KAAK,YAEP,kBAAC,EAAD,CACEG,MAAOgC,KAAKV,aACZzB,KAAK,mBAEP,kBAAC,EAAD,CACEG,MAAOgC,KAAKL,eACZ9B,KAAK,qBAEP,kBAAC,EAAD,CACEO,OAAQ4B,KAAKH,OACbxB,MAAO6B,OAAOF,KAAKhB,MAAMC,eACzBf,MAAK,UAAMY,U,GAxFHqB,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4542c95d.chunk.js","sourcesContent":["import React from 'react';\nimport { ButtonShape } from '../Shape';\n\nexport const Button = ({ click, text }) => (\n  <button\n    className=\"buttons\"\n    onClick={click}\n    type=\"button\"\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = ButtonShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const ButtonShape = PropTypes.shape({\n  text: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n});\n\nexport const SelectShape = PropTypes.shape({\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  change: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport { SelectShape } from '../Shape';\n\nexport const Select = ({ goods, change, value }) => (\n  <select\n    onChange={change}\n    value={value}\n  >\n    {goods.map((item, index) => (\n      <option value={index + 1}>{index + 1}</option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = SelectShape.isRequired;\n","import React from 'react';\nimport './App.css';\nimport { Button } from './components/Button/Button';\nimport { Select } from './components/Select/Select';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    initialLength: 1,\n  }\n\n  start = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n    });\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (a.length - b.length)),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n    });\n  }\n\n  select = (event) => {\n    const length = event.target.value;\n\n    this.setState({\n      initialLength: length,\n    });\n  }\n\n  render() {\n    if (this.state.goods.length === 0) {\n      return (\n        <div className=\"App\">\n          <button\n            className=\"buttons\"\n            onClick={this.start}\n            type=\"button\"\n          >\n            Start\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <ul>\n          {this.state.goods.map(item => (\n            item.length >= this.state.initialLength\n              ? <li key={item} className=\"goodItem\">{item}</li>\n              : null\n          ))}\n        </ul>\n        <Button\n          click={this.reset}\n          text=\"reset\"\n        />\n        <Button\n          click={this.reverse}\n          text=\"reverse\"\n        />\n        <Button\n          click={this.sortByLength}\n          text=\"sort By Length\"\n        />\n        <Button\n          click={this.sortByAlphabet}\n          text=\"sort By Alphabet\"\n        />\n        <Select\n          change={this.select}\n          value={String(this.state.initialLength)}\n          goods={[...goodsFromServer]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}